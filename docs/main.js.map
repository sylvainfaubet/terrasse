{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/drawing-area/drawing-area.component.html","webpack:///./src/app/drawing-area/drawing-area.component.scss","webpack:///./src/app/drawing-area/drawing-area.component.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/sandbox/sandbox.component.html","webpack:///./src/app/sandbox/sandbox.component.scss","webpack:///./src/app/sandbox/sandbox.component.ts","webpack:///./src/app/shared/geometrie.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SandboxComponent } from './sandbox/sandbox.component';\nimport { DrawingAreaComponent } from './drawing-area/drawing-area.component';\n\nexport const routes: Routes = [\n    { path: 'home', component: DashboardComponent },\n    { path: 'draw', component: DrawingAreaComponent },\n    {\n        path: 'sandbox',\n        component: SandboxComponent,\n        children: [\n            {\n                path: '',\n                component: DrawingAreaComponent,\n            },\n        ],\n    },\n    { path: '', pathMatch: 'full', redirectTo: 'draw' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","module.exports = \"<mat-sidenav-container fxFill>\\n    <mat-sidenav #sidenav>\\n        <mat-list (click)=\\\"sidenav.toggle()\\\">\\n            <mat-list-item *ngFor=\\\"let route of routes\\\" routerLink=\\\"{{route.path}}\\\" routerLinkActive=\\\"active\\\">{{route.path}}</mat-list-item>\\n        </mat-list>\\n    </mat-sidenav>\\n    <mat-sidenav-content fxLayout=\\\"column\\\">\\n        <mat-toolbar color=\\\"primary\\\">\\n            <mat-icon (click)=\\\"sidenav.toggle()\\\">menu</mat-icon>\\n            <div id=\\\"title\\\">{{ title }}</div>\\n        </mat-toolbar>\\n        <div fxFlex fxLayoutAlign=\\\"start start\\\">\\n            <router-outlet></router-outlet>\\n        </div>\\n        <terrasse-footer></terrasse-footer>\\n    </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n\\n\"","module.exports = \"terrasse-root mat-sidenav-content mat-toolbar #title {\\n  margin-left: 10px; }\\n\"","import { Component } from '@angular/core';\n\nimport { routes } from './app-routing.module';\n\n@Component({\n    selector: 'terrasse-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n    routes = routes;\n    title = 'Terrasse 2.0';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material/material.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { DrawingAreaComponent } from './drawing-area/drawing-area.component';\nimport { SandboxComponent } from './sandbox/sandbox.component';\n\n@NgModule({\n    bootstrap: [AppComponent],\n    declarations: [AppComponent, DashboardComponent, FooterComponent, DrawingAreaComponent, SandboxComponent],\n    exports: [MaterialModule],\n    imports: [BrowserAnimationsModule, BrowserModule, AppRoutingModule, MaterialModule, FlexLayoutModule],\n    providers: [],\n})\nexport class AppModule {}\n","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'terrasse-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div fxFill fxLayout=\\\"column\\\">\\n    <mat-card fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-around center\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n        <button mat-flat-button (click)=\\\"newPolygon()\\\">recommencer</button>\\n        <mat-button-toggle-group #group=\\\"matButtonToggleGroup\\\" [value]=\\\"mode\\\" (change)=\\\"onModeChange($event.value)\\\">\\n            <mat-button-toggle value=\\\"add\\\">ajouter</mat-button-toggle>\\n            <!-- <mat-button-toggle value=\\\"modify\\\">modifier</mat-button-toggle> -->\\n            <mat-button-toggle value=\\\"delete\\\">supprimer</mat-button-toggle>\\n        </mat-button-toggle-group>\\n        <span>aire : {{getArea(polygon)}}</span>\\n        <span>perimetre : {{getPerimeter(polygon)}}</span>\\n    </mat-card>\\n    <div class=\\\"drawing-zone\\\" fxFlex fxLayoutAlign=\\\"start start\\\">\\n        <svg (click)=\\\"onClick($event)\\\" [attr.viewBox]=\\\"getViewboxText()\\\" transform=\\\"scale(1,-1)\\\">\\n            <polygon [attr.fill]=\\\"fill\\\" [attr.stroke]=\\\"stroke\\\" stroke-width=\\\"0.1\\\" [attr.points]=\\\"formatPoints(polygon)\\\"></polygon>\\n            <circle *ngFor=\\\"let p of polygon\\\" [attr.cx]=\\\"p.x\\\" [attr.cy]=\\\"p.y\\\" r=\\\"0.2\\\" stroke=\\\"red\\\" fill=\\\"transparent\\\" stroke-width=\\\"0.1\\\"/>\\n            <defs>\\n                <pattern id=\\\"grid\\\" width=\\\"1\\\" height=\\\"1\\\" patternUnits=\\\"userSpaceOnUse\\\">\\n                    <path d=\\\"M 0 1 L 1 1 1 0\\\" fill=\\\"none\\\" stroke=\\\"gray\\\" stroke-width=\\\"0.1\\\"/>\\n                </pattern>\\n            </defs>\\n            <rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"url(#grid)\\\" />\\n        </svg>\\n    </div>\\n\\n</div>\\n\\n\"","module.exports = \"terrasse-drawing-area {\\n  width: 100%;\\n  height: 100%; }\\n  terrasse-drawing-area .drawing-zone {\\n    border: 1px solid black; }\\n  terrasse-drawing-area .drawing-zone svg {\\n      width: 100%;\\n      height: 100%; }\\n\"","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Point, findPointInPolygon, airePolygone, perimetrePolygone } from '../shared/geometrie';\n\n@Component({\n    selector: 'terrasse-drawing-area',\n    templateUrl: './drawing-area.component.html',\n    styleUrls: ['./drawing-area.component.scss'],\n})\nexport class DrawingAreaComponent implements OnInit {\n    polygon: Array<Point>;\n    fill = 'red';\n    stroke = 'black';\n    mode = 'add';\n    viewBoxHeight = 15;\n    viewBoxRatio = 1.1;\n    matrix: SVGMatrix;\n    svg:any;\n    viewBoxRatioDone: boolean;\n\n    constructor(private el: ElementRef){}\n\n    ngOnInit() {\n        this.newPolygon();\n        this.svg = this.el.nativeElement.getElementsByTagName('svg')[0];\n        this.matrix = this.svg.createSVGMatrix().translate(0,this.viewBoxHeight).scale(1,-1);\n    }\n\n    getArea(polygon){\n        return airePolygone(polygon);\n    }\n\n    getPerimeter(polygon){\n        return perimetrePolygone(polygon);\n    }\n\n    getViewboxText() {\n        if(!this.viewBoxRatioDone){\n            this.viewBoxRatio = Math.round(this.svg.parentElement.clientWidth / this.svg.parentElement.clientHeight);\n            this.viewBoxRatioDone= true;\n        }\n        return '0 0 ' + this.viewBoxRatio * this.viewBoxHeight + ' ' + this.viewBoxHeight;\n    }\n\n    newPolygon() {\n        this.polygon = new Array<Point>();\n    }\n\n    formatPoints(polygon) {\n        return polygon.map(point => point.x + ',' + point.y).join(' ');\n    }\n\n    onModeChange(value) {\n        this.mode = value;\n    }\n\n    onClick(event) {\n        console.log(event);\n\n\n        const clickedPoint = this.getClickedPoint(event);\n\n        clickedPoint.roundPosition();\n\n        const foundPoint = findPointInPolygon(this.polygon, clickedPoint, 1);\n        switch (this.mode) {\n            case 'add':\n                this.polygon.push(clickedPoint);\n                break;\n            case 'modify':\n                break;\n            case 'delete':\n                if (foundPoint) {\n                    this.polygon.splice(this.polygon.indexOf(foundPoint), 1);\n                }\n                break;\n            default:\n        }\n    }\n\n    private getClickedPoint(event: any) {\n        const svg = event.currentTarget;\n        const p = svg.createSVGPoint();\n\n        p.x = event.clientX;\n        p.y = event.clientY;\n\n        let goodPoint = p.matrixTransform(svg.getScreenCTM().inverse()).matrixTransform(this.matrix);\n\n        return new Point(goodPoint.x, goodPoint.y);\n    }\n}\n","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  footer works!\\n</mat-toolbar>\\n\"","module.exports = \"terrasse-footer {\\n  width: 100%; }\\n  terrasse-footer .mat-toolbar {\\n    height: 40px;\\n    font-size: 0.8em; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'terrasse-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCheckboxModule,\n    MatCardModule,\n    MatIconModule,\n    MatListModule,\n    MatSidenavModule,\n    MatToolbarModule,\n} from '@angular/material';\n\nconst Modules = [\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatListModule,\n    MatSidenavModule,\n    MatToolbarModule,\n];\n\n@NgModule({\n    imports: Modules,\n    exports: Modules,\n})\nexport class MaterialModule {}\n","module.exports = \"<div id=\\\"sandbox\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \"terrasse-sandbox {\\n  height: 100%;\\n  width: 100%; }\\n  terrasse-sandbox #sandbox {\\n    background-color: lightblue;\\n    height: 80%;\\n    width: 80%;\\n    margin: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'terrasse-sandbox',\n    templateUrl: './sandbox.component.html',\n    styleUrls: ['./sandbox.component.scss'],\n})\nexport class SandboxComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit() {}\n}\n","export class Point {\n    x: number;\n    y: number;\n\n    constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n\n    roundPosition() {\n        this.x = Math.round(this.x * 2) / 2;\n        this.y = Math.round(this.y * 2) / 2;\n    }\n}\n\nexport const findPointInPolygon = (polygon: Array<Point>, point: Point, maxDistance: number) => {\n    for (const polygonPoint of polygon) {\n        if (distance(point, polygonPoint) < maxDistance) {\n            return polygonPoint;\n        }\n    }\n    return undefined;\n};\n\nexport const distance = (a: Point, b: Point) => {\n    return Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n};\n\nexport const perimetrePolygone = (path:Array<Point>) => {\n    var perimetre = 0;\n\n    for ( var i = 1; i < path.length; i++) {\n        var tmp1 = path[i - 1];\n        var tmp2 = path[i];\n\n        perimetre += distance(tmp1, tmp2);\n    }\n    if (path.length > 1) {\n        perimetre += distance(path[path.length - 1], path[0]);\n    }\n    return perimetre;\n}\n\nexport const airePolygone = (path:Array<Point>) => {\n    var aire = 0;\n    for ( var i = 0; i < path.length; i++) {\n        var pi = path[i];\n        var pi1 = path[(i + 1) % path.length];\n        aire += (pi.x + pi1.x) * (pi1.y - pi.y);\n    }\n    aire = aire / 2;\n\n    return Math.sqrt(Math.pow(aire, 2));\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}